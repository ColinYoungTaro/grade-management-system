<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yxxt.gradems.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.yxxt.gradems.domain.Student">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="row_id" jdbcType="BIGINT" property="rowId" />
    <result column="major_id" jdbcType="INTEGER" property="majorId" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="admin_class_id" jdbcType="INTEGER" property="adminClassId" />
    <result column="enter_year" jdbcType="INTEGER" property="enterYear" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, row_id, major_id, grade, `status`, admin_class_id, enter_year
  </sql>
  <select id="selectByExample" parameterType="com.yxxt.gradems.domain.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yxxt.gradems.domain.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yxxt.gradems.domain.Student">
    insert into student (user_id, row_id, major_id, 
      grade, `status`, admin_class_id, 
      enter_year)
    values (#{userId,jdbcType=BIGINT}, #{rowId,jdbcType=BIGINT}, #{majorId,jdbcType=INTEGER}, 
      #{grade,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{adminClassId,jdbcType=INTEGER}, 
      #{enterYear,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yxxt.gradems.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="rowId != null">
        row_id,
      </if>
      <if test="majorId != null">
        major_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="adminClassId != null">
        admin_class_id,
      </if>
      <if test="enterYear != null">
        enter_year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="rowId != null">
        #{rowId,jdbcType=BIGINT},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="adminClassId != null">
        #{adminClassId,jdbcType=INTEGER},
      </if>
      <if test="enterYear != null">
        #{enterYear,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yxxt.gradems.domain.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.rowId != null">
        row_id = #{record.rowId,jdbcType=BIGINT},
      </if>
      <if test="record.majorId != null">
        major_id = #{record.majorId,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.adminClassId != null">
        admin_class_id = #{record.adminClassId,jdbcType=INTEGER},
      </if>
      <if test="record.enterYear != null">
        enter_year = #{record.enterYear,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set user_id = #{record.userId,jdbcType=BIGINT},
      row_id = #{record.rowId,jdbcType=BIGINT},
      major_id = #{record.majorId,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      admin_class_id = #{record.adminClassId,jdbcType=INTEGER},
      enter_year = #{record.enterYear,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yxxt.gradems.domain.Student">
    update student
    <set>
      <if test="rowId != null">
        row_id = #{rowId,jdbcType=BIGINT},
      </if>
      <if test="majorId != null">
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="adminClassId != null">
        admin_class_id = #{adminClassId,jdbcType=INTEGER},
      </if>
      <if test="enterYear != null">
        enter_year = #{enterYear,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yxxt.gradems.domain.Student">
    update student
    set row_id = #{rowId,jdbcType=BIGINT},
      major_id = #{majorId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      admin_class_id = #{adminClassId,jdbcType=INTEGER},
      enter_year = #{enterYear,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>